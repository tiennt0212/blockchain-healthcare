version: "3.4"

# This is an example docker-compose file to quickly test an IPFS Cluster
# with multiple peers on a contained environment.

# It runs 3 cluster peers (cluster0, cluster1...) attached to go-ipfs daemons
# (ipfs0, ipfs1...) using the CRDT consensus component. Cluster peers
# autodiscover themselves using mDNS on the docker internal network.
#
# To interact with the cluster use "ipfs-cluster-ctl" (the cluster0 API port is
# exposed to the locahost. You can also "docker exec -ti cluster0 sh" and run
# it from the container. "ipfs-cluster-ctl peers ls" should show all 3 peers a few
# seconds after start.
#
# For persistance, a "compose" folder is created and used to store configurations
# and states. This can be used to edit configurations in subsequent runs. It looks
# as follows:
#
# compose/
# |-- cluster0
# |-- cluster1
# |-- ...
# |-- ipfs0
# |-- ipfs1
# |-- ...
#
# During the first start, default configurations are created for all peers.

services:
  ipfs-node0:
    container_name: ipfs-node0
    image: ipfs/go-ipfs:latest
    expose:
      - "4001" # ipfs swarm - expose if needed/wanted
      - "5001" # ipfs api - expose if needed/wanted
      - "8080" # ipfs gateway - expose if needed/wanted
    volumes:
      - ./go-ipfs-multiple/ipfs0:/data/ipfs

  ipfs-node1:
    container_name: ipfs-node1
    image: ipfs/go-ipfs:latest
    expose:
      - "4001" # ipfs swarm - expose if needed/wanted
      - "5001" # ipfs api - expose if needed/wanted
      - "8080" # ipfs gateway - expose if needed/wanted
    volumes:
      - ./go-ipfs-multiple/ipfs1:/data/ipfs

  ipfs-node2:
    container_name: ipfs-node2
    image: ipfs/go-ipfs:latest
    expose:
      - "4001" # ipfs swarm - expose if needed/wanted
      - "5001" # ipfs api - expose if needed/wanted
      - "8080" # ipfs gateway - expose if needed/wanted
    volumes:
      - ./go-ipfs-multiple/ipfs2:/data/ipfs
